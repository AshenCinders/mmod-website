{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx", "unicorn", "unused-imports", "prettier"],
  "overrides": [
    {
      "files": ["*.ts", "*.js"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts"],
      "extends": [
        "plugin:@nx/typescript",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:unicorn/recommended",
        "prettier"
      ],
      "parserOptions": {
        "project": "tsconfig.base.json"
      },
      "rules": {
        "quotes": [
          "error",
          "single",
          {
            "avoidEscape": true
          }
        ],
        "no-var": ["error"],
        "prefer-const": ["error"],
        "no-empty": [
          "error",
          {
            "allowEmptyCatch": true
          }
        ],
        "@typescript-eslint/no-empty-function": [
          "error",
          {
            "allow": ["arrowFunctions"]
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "types": ["boolean", "string", "number"],
            "modifiers": ["global"],
            "format": ["UPPER_CASE"]
          },
          {
            "selector": "variable",
            "types": ["boolean", "string", "number"],
            "modifiers": ["exported"],
            "format": ["strictCamelCase", "UPPER_CASE"]
          },
          { "selector": "class", "format": ["PascalCase"] },
          { "selector": "enumMember", "format": ["UPPER_CASE"] },
          { "selector": "typeParameter", "format": ["PascalCase"] },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": { "regex": "^I[A-Z]", "match": false }
          }
        ],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "args": "after-used",
            "varsIgnorePattern": "^_",
            "argsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/no-inferrable-types": [
          "warn",
          { "ignoreParameters": true }
        ],
        "@typescript-eslint/no-namespace": "off",

        "unicorn/prevent-abbreviations": ["off"],
        "unicorn/numeric-separators-style": [
          "warn",
          { "onlyIfContainsSeparator": true }
        ],
        "unicorn/no-null": ["off"],
        "unicorn/prefer-module": ["off"],
        "unicorn/prefer-top-level-await": ["off"],
        "unicorn/prefer-ternary": ["error", "only-single-line"],
        "unicorn/prefer-math-trunc": ["off"],
        "unicorn/switch-case-braces": ["off"],
        "unicorn/no-negated-condition": ["off"],
        "unicorn/no-useless-undefined": ["off"],
        "unicorn/no-empty-file": ["off"],
        "no-undef-init": ["error"],
        "unicorn/prefer-export-from": [
          "error",
          { "ignoreUsedVariables": true }
        ],
        "unicorn/no-array-callback-reference": ["off"]
      }
    },
    {
      "files": ["*.spec.ts", "*.spec.js", "*.e2e-spec.ts"],
      "env": {
        "jest": true
      },
      "rules": {
        "unicorn/consistent-function-scoping": ["off"]
      }
    },
    {
      "files": ["*.js"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    }
  ]
}
